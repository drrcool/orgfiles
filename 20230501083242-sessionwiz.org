:PROPERTIES:
:ID:       147873c2-5f69-495b-87c4-39510d687428
:END:
#+title: SessionWiz
#+filetags: project
* Outstanding Tasks
** TODO Create query to find sessions of interest
** TODO Create session finder
** TODO Loader: the modal has a very small entry for the gsid
** TODO Loader: the modal errors when you try to use it to fetch a session
When I tried this today on my laptop, it didn't error out.  That said, we need to figure out a  better way to try and get user feedback into the UI as you seem to sit there for a decade once the data fetch starts.
** TODO View: Two Views: Custom where we use the existing tooling
*** TODO create grid view
*** TODO create metric selector
*** TODO create option for metric type:
**** Raw metric
**** Difference metric
**** Ratio metric
**** Running Difference metric
** TODO mask out data for the histograms
** TODO check that a session is the proper formatting
** TODO When we add a new session, it augments the existing sessionList instead of overwritting
** TODO add units to charts
** TODO add gameplay components to summary overview
** TODO add telemetry v2 and gameplay lifecycle events
Gameplay Status logging:
#+begin_src js
import { GameplayF } from "@ocga/gameplay-lifecycles"

async function run() {
    const status = await new GameplayF(
        "ab61421f-51a4-4add-a931-f6272bea7946",
        { utcDate: 20230714, exact: true }
    ).request();

    console.log(status);
}

run();
#+end_src

Note that we need to provide a =utc_date=.  If the user doesn't provide one, we can use ={ utcDate: now() -7days, exact: false}= and that should do what we need. Under the hood, it looks at =utc_date gte utcDate=
** TODO add errorboundary for cases where the data fetch fails
