#    -*- mode: org -*-


Archived entries from file /Users/richardjcool/org/20230501083242-sessionwiz.org


* JSON conversion before transfer notes
:PROPERTIES:
:ARCHIVE_TIME: 2023-06-07 Wed 20:19
:ARCHIVE_FILE: ~/org/20230501083242-sessionwiz.org
:ARCHIVE_CATEGORY: 20230501083242-sessionwiz
:ARCHIVE_ITAGS: project
:END:

** Testing a 2320s long session:
*** No compression with JSON conversion:
**** 2.4 minutes
**** 198 Mb
*** No compression with no conversion:
**** 1.3 minutes
**** 23 Mb
*** Compression with no conversion:
**** 40 seconds
**** 28 Mb
*** Compression with JSON
**** 1.8 minutes
***** 198Mb 5

* Aperture timings:
:PROPERTIES:
:ARCHIVE_TIME: 2023-06-07 Wed 20:19
:ARCHIVE_FILE: ~/org/20230501083242-sessionwiz.org
:ARCHIVE_CATEGORY: 20230501083242-sessionwiz
:ARCHIVE_ITAGS: project
:END:
** Case 1:
GSID:3a4e1e3b-678f-4a6f-bd88-52c386a64487
Session Duration: 2600s

*** Direct aperture usage: 2s
*** Aperture API fetch:
*** Sessionwiz API fetch:

* DONE Add chart to CSV reader
CLOSED: [2023-05-25 Thu 18:20]
:PROPERTIES:
:ARCHIVE_TIME: 2023-06-07 Wed 20:19
:ARCHIVE_FILE: ~/org/20230501083242-sessionwiz.org
:ARCHIVE_OLPATH: Outstanding Tasks
:ARCHIVE_CATEGORY: 20230501083242-sessionwiz
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: project
:END:
-- Using http://aperture.dta.netflix.net/ we can get CSV files for a given gsid.   These can then be passed to data parser
-- should be easier to cut out the middle man -- integrate aperture directly into sessionwiz

-- Some observations from quick looks.
    -- data often have singular spikes that make scaling need.
    -- Need a way to easily capture where spikes happen but without completely removing dynamic range of the chart.  We did this with the original sessionwiz by finding the rms variance around the mean and cutting on some N sigmas from the mean.


* DONE Look at GameStatusLog and see if CTGL has been logged
CLOSED: [2023-05-25 Thu 18:20]
:PROPERTIES:
:ARCHIVE_TIME: 2023-06-07 Wed 20:19
:ARCHIVE_FILE: ~/org/20230501083242-sessionwiz.org
:ARCHIVE_OLPATH: Outstanding Tasks
:ARCHIVE_CATEGORY: 20230501083242-sessionwiz
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: project
:END:

* Parsing Aperture data:
:PROPERTIES:
:ARCHIVE_TIME: 2023-06-07 Wed 20:19
:ARCHIVE_FILE: ~/org/20230501083242-sessionwiz.org
:ARCHIVE_CATEGORY: 20230501083242-sessionwiz
:ARCHIVE_ITAGS: project
:END:
** Goals for the Parser:
*** Always returns the minimum and maximum frame for the session
*** If no minFrame and maxFrame is specified, returns the first N (need to determine the safe size) frames
*** If minFrame is set, only return frames larger than that value
*** If maxFrame is set, only return frames smaller than that value
*** What data format should we use?
**** Definitely want it in JSON, but if each row contains the column names, this will explode the data set.
**** Options:
#+begin_src javascipt
{
   gameSessionId: string,
   sessionMinFrame: number,
   sessionMaxFrame: number,
   minFrame: number,
   maxFrame: number,
   videoFrame: number[],
   metric1: number[],
   metric2: number[]
}
#+end_src

** Endpoints (GET):

*** Video: http://aperture.dta.netflix.net/api/csv/video/<GSID>

Output Columns:
- VideoFrameID
- GameProcessFrameCPUTime
- RenderThreadFrameCPUTime
- VideoFrameCaptureDuration
- VideoFrameCompressedSize
- VideoFrameControllerToGameDuration
- VideoFrameEncodeDuration
- VideoFrameEncodeInterval
- VideoFrameEncodePrepareDuration
- VideoFrameEncodeReadDuration
- VideoFrameEncodeRequestDuration
- VideoFrameGameInterval
- VideoFrameGameRenderDuration
- VideoFrameGameRenderLoopDuration
- VideoFrameGameToTransportDuration
- VideoFrameGameUpdateDuration
- VideoFrameIDR
- VideoFrameLastInputEventTime
- VideoFramePresentMonoTime
- VideoFramePresentTime
- VideoFrameRTPTimestamp
- VideoFrameSSIMScore
- VideoFrameSendInterval
- VideoFrameStartMonoTime
- VideoFrameStartTime
- VideoFrameTargetFrameSize
- VideoFrameTotalEncodeDuration
- VideoFrameTransportWaitDuration
- VideoFrameGPURenderDuration
- VideoFrameGPUConvertDuration
- VideoFrameTransportSendDuration
- VideoFrameClientDisplayDuration
- VideoFrameClientState
- VideoFrameClientStatusDecoderFinishTime
- VideoFrameClientStatusDecoderReceiveTime
- VideoFrameClientStatusFirstPacketArrival
- VideoFrameClientStatusFrameArrivalTime
- VideoFrameClientStatusFrameDeadline
- VideoFrameClientStatusRenderingDelay
- VideoFrameClientStatusTimestamp
- VideoFrameControllerToClientDecodedDuration
- VideoFrameControllerToClientDisplayDuration
- VideoFrameGameToClientDecodedDuration
- VideoFrameGameToClientDisplayDuration
- VideoFrameClientAckTime
- VideoFrameClientArrivalTime
- VideoFrameClientFirstPacketArrivalTime
- VideoFrameClientReceiveDuration
- VideoFrameClientServerAvgTimeDelta
- VideoFrameClientServerTimeDelta
- VideoFrameNetworkOneWayLatency
- VideoFrameTravelDuration
- VideoFrameAckFEC
- VideoFrameAckRTX
- VideoFrameAckState
- VideoFrameAckVersion
- VideoFrameGPUToEncoderTransferDuration
- ProcessCPUTime
- ProcessResidentMemoryUsed
- ProcessVirtualMemoryUsed
- ProcessGPUCPUMemoryUsed
- ProcessGPUComputeUsagePercent
- ProcessGPUDMAUsagePercent
- ProcessGPUDecoderUsagePercent
- ProcessGPUEncoderUsagePercent
- ProcessGPUGTTMemoryUsed
- ProcessGPUGraphicsUsagePercent
- ProcessGPUMemoryUsed
- GoFreeCount
- GoGCCycleCount
- GoGCTotalPauseDuration
- GoMallocCount
- GoMemoryAllocated
- GoTotalMemoryAllocated
- VideoPacketReceived
- VideoPacketNotReceived
- FECPacketReceived
- FECPacketNotReceived
- RTXPacketReceived
- RTXPacketNotReceived

*** Audio: http://aperture.dta.netflix.net/api/csv/audio/<GSID>
Output:
- AudioFrameID
- AudioFrameCaptureDuration
- AudioFrameCompressedSize
- AudioFrameEncodeInterval
- AudioFrameGameInterval
- AudioFrameGameToTransportDuration
- AudioFramePresentMonoTime
- AudioFramePresentTime
- AudioFrameRTPTimestamp
- AudioFrameSendInterval
- AudioFrameTotalEncodeDuration
- AudioFrameTransportWaitDuration
- AudioFrameTransportSendDuration
- AudioFrameAckJitterBuffer
- AudioFrameAckRTX
- AudioFrameAckState
- AudioFrameClientAckTime
- AudioFrameClientArrivalTime
- AudioFrameClientFirstPacketArrivalTime
- AudioFrameClientReceiveDuration
- AudioFrameClientServerAvgTimeDelta
- AudioFrameClientServerTimeDelta
- AudioFrameNetworkOneWayLatency
- AudioFrameTravelDuration

*** Session: http://aperture.dta.netflix.net/api/csv/session/<GSID>
Outputs:
- Timestamp
- GameSessionCount
- SessionVideoFrameID
- SessionAudioFrameID
- VideoFrame
- AudioFrame
- ProcessGPUCPUMemoryUsed
- ProcessGPUComputeUsagePercent
- ProcessGPUDMAUsagePercent
- ProcessGPUDecoderUsagePercent
- ProcessGPUEncoderUsagePercent
- ProcessGPUGTTMemoryUsed
- ProcessGPUGraphicsUsagePercent
- ProcessGPUMemoryUsed
- GoFreeCount
- GoGCCycleCount
- GoGCTotalPauseDuration
- GoMallocCount
- GoMemoryAllocated
- GoTotalMemoryAllocated

*** Machine: http://aperture.dta.netflix.net/api/csv/machine/<machineId>


* DONE View: Other View: Curated: list of curated charts
CLOSED: [2023-06-20 Tue 09:34]
:PROPERTIES:
:ARCHIVE_TIME: 2023-06-20 Tue 09:34
:ARCHIVE_FILE: ~/org/20230501083242-sessionwiz.org
:ARCHIVE_OLPATH: Outstanding Tasks
:ARCHIVE_CATEGORY: 20230501083242-sessionwiz
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: project
:END:

* CANCELLED Add dynamic range logic
CLOSED: [2023-06-20 Tue 09:34]
:PROPERTIES:
:ARCHIVE_TIME: 2023-06-20 Tue 09:34
:ARCHIVE_FILE: ~/org/20230501083242-sessionwiz.org
:ARCHIVE_OLPATH: Outstanding Tasks
:ARCHIVE_CATEGORY: 20230501083242-sessionwiz
:ARCHIVE_TODO: CANCELLED
:ARCHIVE_ITAGS: project
:END:
- State "CANCELLED"  from "TODO"       [2023-06-20 Tue 09:34] \\
  For now, its not looking like we need to use the range for this.

* DONE Loader: add back name
CLOSED: [2023-07-05 Wed 09:15]
:PROPERTIES:
:ARCHIVE_TIME: 2023-07-05 Wed 09:15
:ARCHIVE_FILE: ~/org/20230501083242-sessionwiz.org
:ARCHIVE_OLPATH: Outstanding Tasks
:ARCHIVE_CATEGORY: 20230501083242-sessionwiz
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: project
:END:

* DONE Audio charts are empty
CLOSED: [2023-07-05 Wed 09:15]
:PROPERTIES:
:ARCHIVE_TIME: 2023-07-05 Wed 09:16
:ARCHIVE_FILE: ~/org/20230501083242-sessionwiz.org
:ARCHIVE_OLPATH: Outstanding Tasks
:ARCHIVE_CATEGORY: 20230501083242-sessionwiz
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: project
:END:

* DONE Selector:  We shouldn't be able to select more than one session at a time.
CLOSED: [2023-07-05 Wed 09:15]
:PROPERTIES:
:ARCHIVE_TIME: 2023-07-05 Wed 09:16
:ARCHIVE_FILE: ~/org/20230501083242-sessionwiz.org
:ARCHIVE_OLPATH: Outstanding Tasks
:ARCHIVE_CATEGORY: 20230501083242-sessionwiz
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: project
:END:

* DONE add native aperture to main branch
CLOSED: [2023-07-05 Wed 09:15]
:PROPERTIES:
:ARCHIVE_TIME: 2023-07-05 Wed 09:16
:ARCHIVE_FILE: ~/org/20230501083242-sessionwiz.org
:ARCHIVE_OLPATH: Outstanding Tasks
:ARCHIVE_CATEGORY: 20230501083242-sessionwiz
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: project
:END:

* DONE finish data cleaning PR
CLOSED: [2023-07-05 Wed 09:15]
:PROPERTIES:
:ARCHIVE_TIME: 2023-07-05 Wed 09:16
:ARCHIVE_FILE: ~/org/20230501083242-sessionwiz.org
:ARCHIVE_OLPATH: Outstanding Tasks
:ARCHIVE_CATEGORY: 20230501083242-sessionwiz
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: project
:END:

* DONE work on URL loader
CLOSED: [2023-07-05 Wed 09:15]
:PROPERTIES:
:ARCHIVE_TIME: 2023-07-05 Wed 09:16
:ARCHIVE_FILE: ~/org/20230501083242-sessionwiz.org
:ARCHIVE_OLPATH: Outstanding Tasks
:ARCHIVE_CATEGORY: 20230501083242-sessionwiz
:ARCHIVE_TODO: DONE
:ARCHIVE_ITAGS: project
:END:
