#+title: Should Netflix Develop a Runtime Update System?
#+PROPERTY: header-args: :tangle t
#+PROPERTY: :auto-tangle: t


* Context
** we currently use a hybrid system
*** we control the release
**** ninja, android, etc
*** deferred
**** partner delivers through their app store
***** samsung, roku, lg
*** partner lead
**** pushed through firmware updates
** youtube is building infa to do all in house
*** *Should Netflix?*


* Goal
** DONE [#A] How much of a population of deferred devices do we have now? :work:adhoc:medium:effort:
CLOSED: [2023-01-11 Wed 22:27]
** DONE [#A] In the approx 3 years it takes to roll this out? :work:adhoc:medium:effort:
CLOSED: [2023-01-12 Thu 19:56]
** DONE [#A] How is the ecosystem evolving? :adhoc:URGENT:
CLOSED: [2023-01-12 Thu 19:56]


* Cohort definition
** Netflix-updated
*** Android TV (119M)
*** Game Consoles (31M)
**** PS4
***** 953
**** PS4 pro
***** 1676
**** PS5
***** 3084
**** XBox One
***** 1165
**** XBox One 4K
***** 1677
**** XB 1X
***** 2163
**** XB X
***** 3097
**** XB S
***** 3098

*** Fire TV
**** Seems like many of these are coming through as Android TV
**** For the final draft we can separate them out
** Partner App Store Updated
*** Roku (7.7M)
**** Looking just at the 5.3 devices:
***** 3283
***** 3379
***** 3641
***** 3876
***** 3981
***** 3997
***** 3162
***** 3246
***** 3247
***** 3710
***** 3796
***** 3818
***** 4180
***** 4191
***** 4212
*** Tizen (7k)
**** This is samsumg
**** samsung the brand has ~ 18M devices but most are not tizen
*** WebOS (547k)
**** scaling partner = LG webOS Licensing Program

** Total population: 198M

#+begin_src python

androidTV = 119000000
consoles = 31000000
roku = 7700000
webOS = 547000
samsung = 18000000

no_samsung =  (androidTV + consoles + roku + webOS)/1e6
with_samsung = (androidTV + consoles + roku + webOS + samsung)/1e6

return no_samsung, with_samsung
#+end_src

#+RESULTS:
| 158.247 | 176.247 |

** quick result:
 Of the 198M current-generation devices between 158M and 176M (80-89)
* Actives and View Hours
** Lets get the data
*** Focus
**** 5.3, 6.0, 6.1, 6.0-beta
***** should we instead use nrdapp?
**** smart tvs, stbs, and game consoles
**** classifiers
***** =client_name= = AndroidTV and name is not like fire tv => AndroidTV
***** name is like FireTV or PRV-FTV and brand is amazon => firetv
***** in the Roku dtid list => roku
***** scaling program has webOs => webOS
***** in game console list => console
***** recent samoung => samsung
***** else nonupdatable
**** Data to get
***** TODO Actives & view hours :adhoc:
***** TODO first views :adhoc:

** Queries
#+begin_src sql :tangle ~/allprojects/adhoc/update_strategy/activity.sql
WITH fact AS (
SELECT
    snapshot_dateint,
    act.device_type_id,
    COALESCE(dcrd.sdk_minor_version,'--') as sdk_minor_version,
    COALESCE(dcrd.nrdapp_version,'--') as nrdapp_version,
    dmrd.hw_category,
    COALESCE(dmrd.brand, '--') as brand,
    COALESCE(dcrd.client_platform_name, '--') as client_platform_name,
                                        COALESCE(dcrd.client_name,'--') as client_name,
    dmrd.device_type_extended_name,
    COALESCE(sp.scaling_program,'--') AS scaling_program,
    active_devices_28d,
    view_seconds_28d
FROM
    dse.device_version_activity_sum act
LEFT JOIN
    dse.scaling_platform_test sp ON (act.device_type_id = sp.device_type_id)
JOIN
    dse.device_client_rollup_d dcrd ON (act.device_type_id = dcrd.device_type_id AND
                                           act.client_version = dcrd.client_version)
JOIN
   dse.device_model_rollup_d dmrd ON (act.device_type_id = dmrd.device_type_id AND
                                      act.device_model = dmrd.device_model)
WHERE
    snapshot_dateint >= ${START_DATE}
    AND dmrd.hw_category in ('Smart TV', 'Set Top Box/Streaming Stick', 'Game Console')
    AND dcrd.sdk_minor_version in ('--','5.3','6.0','6.0-beta','6.1')
    and dcrd.client_platform_name = 'NRDP'
),

with_cohort AS (
SELECT
    CASE WHEN brand = 'Amazon' and (lower(device_type_extended_name) like '%firetv%' OR
        lower(device_type_extended_name) like '%fire tv%' OR
        lower(device_type_extended_name) like '%prv-ftv%' ) THEN 'Amazon Fire TV'
        WHEN client_name = 'Android TV' THEN 'Android TV'
        WHEN device_type_id IN (3283,3379,3641,3876,3981,3997,3162,3246,3247,3710,3796,3818,4180,4191,4212) THEN 'Roku'
        WHEN scaling_program =  'LG webOS Licensing Program' THEN 'webOS'
        WHEN device_type_id IN (953, 1676, 3084, 1165, 1677, 2163, 3097,  3098) THEN 'Game Console'
        WHEN lower(brand) = 'samsung' and lower(scaling_program) <> 'tizen tv' THEN 'Samsung - not Tizen'
        WHEN lower(scaling_program) = 'tizen tv' THEN 'Tizen'
        ELSE 'Non-Updating' END as cohort,
    snapshot_dateint,
    sdk_minor_version,
    hw_category,
    nrdapp_version,
    active_devices_28d,
    view_seconds_28d
FROM
    fact
WHERE
    snapshot_dateint >= ${START_DATE}
    AND active_devices_28d > 0
    AND view_seconds_28d > 0
)

SELECT
    cohort,
    CASE WHEN cohort in ('Amazon Fire TV','Android TV', 'Game Console') THEN 'Netflix Updated'
         WHEN cohort in ('Roku', 'Tizen', 'webOS','Samsung - not Tizen') THEN 'Partner Store'
         WHEN cohort = 'Non-Updating' THEN 'Non-Updating' ELSE 'Unknown' END as cohort_type,
    snapshot_dateint,
    hw_category,
    SUM(active_devices_28d) as active_devices_28d,
    SUM(view_seconds_28d) as view_seconds_28d,
  snapshot_dateint
FROM
    with_cohort
GROUP BY
  1,2, 3, 4, 7
ORDER BY
    1,2
#+end_src
 Results:

| cohort_type     | active_devices_28d | view_seconds_28d | frac_actives | frac_view_secs |
|-----------------+--------------------+------------------+--------------+----------------|
| Netflix Updated |              137.2 |          2882.71 |        68.63 |          63.59 |
| Non-Updating    |              35.94 |           958.13 |        17.98 |          21.14 |
| Partner Store   |              26.77 |           692.43 |        13.39 |          15.27 |
|-----------------+--------------------+------------------+--------------+----------------|
If we include Samsung as part of the Tizen upgrades, non-Updating devices make up only 18% of the 5.3+ non-MVPD device population. In terms of the overall Netflix ecosystem, 35M devices makes up 3% of Netflix actives and 7.4% of NRDP devices.

* Taking a look at device first views
Device first views are a window into the activation of new devices. Ovrall trends is a comparison of adoption and retirement, while first views shows strict adoption. Looking at long term trends can help us understand the preference jkof certain device form factors or implementations over time (moving to streaming sticks or the rise of MVPDs for example), but first views shows what kind of devices are customers are using now, which is important when considering choices for several years coming.
** =dse.device_first_view_sum=
*** Columns:
- Dims: device_type_id, device_model, client_version, region_date
- Metrics: first_views_cnt

** Query:
#+begin_src sql :tangle ~/allprojects/adhoc/update_strategy/first_views.sql
WITH fact AS (
SELECT
region_date,
        t1.device_type_id,
        t2.hw_category,
        t2.device_type_extended_name,
            t2.brand,
            t3.sdk_minor_version,
            t3.nrdapp_version,
            t3.client_platform_name,
            sp.scaling_program,
            t3.client_name,
            SUM(t1.first_views_cnt) as device_first_views
      FROM
        dse.device_first_view_sum t1 wV
    LEFT JOIN
         dse.device_model_rollup_d t2 on (t1.device_type_id = t2.device_type_id and t1.device_model = t2.device_model)
       LEFT JOIN
       dse.device_client_rollup_d t3 ON (t1.device_type_id = t3.device_type_id and t1.client_version = t3.client_version)
    LEFT JOIN
         dse.scaling_platform_test sp ON (t1.device_type_id = sp.device_type_id)
      WHERE
        region_date >= ${START_DATE}
        and t2.hw_category in ('Smart TV', 'Set Top Box/Streaming Stick', 'Game Console')
        and t3.sdk_minor_version in ('5.3', '6.0', '6.1', '6.0-beta', '--')
        and t3.client_platform_name  = 'NRDP'
        GROUP BY
        1, 2, 3, 4, 5, 6, 7, 8, 9,10
),

with_cohort AS (
sELECT
CASE WHEN brand = 'Amazon' and (lower(device_type_extended_name) like '%firetv%' OR
        lower(device_type_extended_name) like '%fire tv%' OR
        lower(device_type_extended_name) like '%prv-ftv%' ) THEN 'Amazon Fire TV'
        WHEN client_name = 'Android TV' THEN 'Android TV'
        WHEN device_type_id IN (3283,3379,3641,3876,3981,3997,3162,3246,3247,3710,3796,3818,4180,4191,4212) THEN 'Roku'
        WHEN scaling_program =  'LG webOS Licensing Program' THEN 'webOS'
        WHEN device_type_id IN (953, 1676, 3084, 1165, 1677, 2163, 3097,  3098) THEN 'Game Console'
        WHEN lower(brand) = 'samsung' and lower(scaling_program) <> 'tizen tv' THEN 'Samsung - not Tizen'
        WHEN lower(scaling_program) = 'tizen tv' THEN 'Tizen'
        ELSE 'Non-Updating' END as cohort,
region_date,
hw_category,
device_type_extended_name,
sdk_minor_version,
device_first_views
FROM fact)

SELECT
    CASE WHEN cohort in ('Amazon Fire TV','Android TV', 'Game Console') THEN 'Netflix Updated'
         WHEN cohort in ('Roku', 'Tizen', 'webOS','Samsung - not Tizen') THEN 'Partner Store'
         WHEN cohort = 'Non-Updating' THEN 'Non-Updating' ELSE 'Unknown' END as cohort_type,
cohort,
hw_category,
SUM(device_first_views) as device_first_views,
region_date
FROM
    with_cohort
GROUP BY
  1,2, 3,5
ORDER BY
    1,2
#+end_src
** Charting:
I'm giving plotly a whirl. I'm using the [[https://plotly.com/nodejs/getting-started/][noddata = ly.
    #+begin_src sh
npm install plotly
p
    #+end_src
